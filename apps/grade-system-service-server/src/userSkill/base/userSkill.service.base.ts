/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  UserSkill as PrismaUserSkill,
  Grade as PrismaGrade,
  User as PrismaUser,
  Skill as PrismaSkill,
} from "@prisma/client";

export class UserSkillServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserSkillCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userSkill.count(args);
  }

  async userSkills(
    args: Prisma.UserSkillFindManyArgs
  ): Promise<PrismaUserSkill[]> {
    return this.prisma.userSkill.findMany(args);
  }
  async userSkill(
    args: Prisma.UserSkillFindUniqueArgs
  ): Promise<PrismaUserSkill | null> {
    return this.prisma.userSkill.findUnique(args);
  }
  async createUserSkill(
    args: Prisma.UserSkillCreateArgs
  ): Promise<PrismaUserSkill> {
    return this.prisma.userSkill.create(args);
  }
  async updateUserSkill(
    args: Prisma.UserSkillUpdateArgs
  ): Promise<PrismaUserSkill> {
    return this.prisma.userSkill.update(args);
  }
  async deleteUserSkill(
    args: Prisma.UserSkillDeleteArgs
  ): Promise<PrismaUserSkill> {
    return this.prisma.userSkill.delete(args);
  }

  async getGrade(parentId: string): Promise<PrismaGrade | null> {
    return this.prisma.userSkill
      .findUnique({
        where: { id: parentId },
      })
      .grade();
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.userSkill
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }

  async getSkill(parentId: string): Promise<PrismaSkill | null> {
    return this.prisma.userSkill
      .findUnique({
        where: { id: parentId },
      })
      .skill();
  }
}
